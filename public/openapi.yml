openapi: 3.0.0
info:
  title: RetailCrmTest
  description: 'This service provide simple api to store and edit json documents'
  contact:
    email: loco@list.ru
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8081/api/v1'
    description: api
paths:
  /clients:
    get:
      tags:
        - Clients
      summary: 'List of clients'
      operationId: 'Application\Controller\ClientController::index'
      parameters:
        -
          name: page
          in: query
          description: 'Page number for display results'
          required: false
          allowEmptyValue: true
          schema:
            type: integer
        -
          name: perPage
          in: query
          description: 'Per page clients count'
          required: false
          allowEmptyValue: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Success response'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiResponsePagination'
  /clients/create:
    post:
      tags:
        - Clients
      summary: 'Create a new client'
      operationId: 'Application\Controller\ClientController::create'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: 'Success response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/clients/{id}/update':
    put:
      tags:
        - Clients
      summary: 'Updating the current client'
      operationId: 'Application\Controller\ClientController::update'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: 'Success response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/clients/{id}':
    get:
      tags:
        - Clients
      summary: 'Show client'
      operationId: 'Application\Controller\ClientController::show'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Success response'
components:
  schemas:
    ApiResponsePagination:
      title: 'Client response with pagination'
      properties:
        collection:
          type: array
          items:
            $ref: '#/components/schemas/Client'
        pagination:
          $ref: '#/components/schemas/Pagination'
      type: object
    Client:
      title: 'Client schema'
      properties:
        id:
          description: Id
        name:
          description: Name
          required:
            - name
          type: string
        email:
          description: Email
          required:
            - email
          type: string
        phone:
          description: Phone
          type: string
      type: object
    Error:
      description: 'Api Error schema'
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        class:
          type: string
          nullable: true
        trace:
          type: array
          items:
            type: object
          nullable: true
      type: object
    Pagination:
      title: 'Pagination schema'
      properties:
        page:
          title: 'Page number'
          type: integer
          format: int
        perPage:
          title: 'Items per page'
          type: integer
          format: int
        total:
          title: Total
          type: integer
          format: int
      type: object
